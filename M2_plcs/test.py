import subprocessimport time# 编译程序subprocess.run(["gcc", "-pthread", "-o", "plcs", "plcs.c"])# 测试用例文件test_cases_file = "tests.txt"# ANSI escape codes for colorsGREEN = "\033[92m"RED = "\033[91m"RESET = "\033[0m"# 读取测试用例with open(test_cases_file, "r") as file:    lines = file.readlines()num_cases = int(lines[0].strip())thread_counts = [1, 2, 4, 8, 16]  # 不同线程数量的配置results = {}for i in range(1, num_cases + 1):    case = lines[i].strip().split()        # 生成复杂字符串    input1 = case[0].replace("*", "")    input2 = case[1].replace("*", "")        if "*" in case[0]:        input1 = input1 * int(case[0].split("*")[1])        if "*" in case[1]:        input2 = input2 * int(case[1].split("*")[1])        expected = case[2]        results[i] = {}        for t in thread_counts:        start_time = time.time()                process = subprocess.Popen(["./plcs", str(t)], stdin=subprocess.PIPE, stdout=subprocess.PIPE, text=True)        output, _ = process.communicate(input=f"{input1} {input2}")                elapsed_time = time.time() - start_time                results[i][t] = {            'output': output.strip(),            'time': elapsed_time        }                if output.strip() == expected:            print(f"Test case {i} with {t} threads {GREEN}passed{RESET} in {elapsed_time:.4f} seconds.")        else:            print(f"Test case {i} with {t} threads {RED}failed{RESET}: Expected {expected}, but got {output.strip()}")